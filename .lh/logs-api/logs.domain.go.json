{
    "sourceFile": "logs-api/logs.domain.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1719196997077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719214563790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +0,0 @@\n-package main\r\n-\r\n-import (\r\n-    \"context\"\r\n-    \"github.com/gin-gonic/gin\"\r\n-    \"logs-api/adapters/drivers\"\r\n-    \"logs-api/adapters/drivens\"\r\n-    \"logs-api/ports/drivers\"\r\n-    \"logs-api/ports/drivens\"\r\n-    \"logs-api/models\"\r\n-    \"logs-api/handler\"\r\n-)\r\n-\r\n-var drivenAdapter drivens.LogsDrivenPort = drivens.NewLogsAdapter()\r\n-var logsAdapter drivers.LogsPort = drivers.NewLogsProxyAdapter(drivenAdapter)\r\n-\r\n-func SaveLogEndpoint(c *gin.Context) {\r\n-    var input models.ErrorLog\r\n-    if err := c.BindJSON(&input); err != nil {\r\n-        handler.HandleError(c, err)\r\n-        return\r\n-    }\r\n-\r\n-    err := logsAdapter.SaveLog(context.Background(), input)\r\n-    if err != nil {\r\n-        handler.HandleError(c, err)\r\n-        return\r\n-    }\r\n-\r\n-    c.JSON(http.StatusOK, gin.H{\"status\": \"log saved\"})\r\n-}\r\n\\ No newline at end of file\n"
                }
            ],
            "date": 1719196997077,
            "name": "Commit-0",
            "content": "package main\r\n\r\nimport (\r\n    \"context\"\r\n    \"github.com/gin-gonic/gin\"\r\n    \"logs-api/adapters/drivers\"\r\n    \"logs-api/adapters/drivens\"\r\n    \"logs-api/ports/drivers\"\r\n    \"logs-api/ports/drivens\"\r\n    \"logs-api/models\"\r\n    \"logs-api/handler\"\r\n)\r\n\r\nvar drivenAdapter drivens.LogsDrivenPort = drivens.NewLogsAdapter()\r\nvar logsAdapter drivers.LogsPort = drivers.NewLogsProxyAdapter(drivenAdapter)\r\n\r\nfunc SaveLogEndpoint(c *gin.Context) {\r\n    var input models.ErrorLog\r\n    if err := c.BindJSON(&input); err != nil {\r\n        handler.HandleError(c, err)\r\n        return\r\n    }\r\n\r\n    err := logsAdapter.SaveLog(context.Background(), input)\r\n    if err != nil {\r\n        handler.HandleError(c, err)\r\n        return\r\n    }\r\n\r\n    c.JSON(http.StatusOK, gin.H{\"status\": \"log saved\"})\r\n}\r\n"
        }
    ]
}