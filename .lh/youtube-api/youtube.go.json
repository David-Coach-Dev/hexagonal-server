{
    "sourceFile": "youtube-api/youtube.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1719218283451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719218502287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package main\r\n+package \r\n \r\n import (\r\n     \"context\"\r\n     \"github.com/gin-gonic/gin\"\r\n"
                },
                {
                    "date": 1719218510032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+package youtube\r\n+\r\n+import (\r\n+    \"context\"\r\n+    \"github.com/gin-gonic/gin\"\r\n+    \"youtube-api/models\"\r\n+    \"youtube-api/ports/drivens\"\r\n+)\r\n+\r\n+type YouTubeService struct {\r\n+    drivenAdapter drivens.YouTubeDrivenPort\r\n+}\r\n+\r\n+func NewYouTubeService(drivenAdapter drivens.YouTubeDrivenPort) *YouTubeService {\r\n+    return &YouTubeService{\r\n+        drivenAdapter: drivenAdapter,\r\n+    }\r\n+}\r\n+\r\n+func (ys *YouTubeService) HandleGetSearching(c *gin.Context) {\r\n+    query := c.Query(\"search\")\r\n+    data, err := ys.drivenAdapter.GetSearching(context.Background(), query)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"data\": data})\r\n+}\r\n+\r\n+func (ys *YouTubeService) HandleGetRandomVideo(c *gin.Context) {\r\n+    data, err := ys.drivenAdapter.GetRandomVideo(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"data\": data})\r\n+}\r\n+\r\n+func (ys *YouTubeService) HandleGetSearchPlaylists(c *gin.Context) {\r\n+    data, err := ys.drivenAdapter.GetSearchPlaylists(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"data\": data})\r\n+}\r\n+\r\n+func (ys *YouTubeService) HandleGetSearchPlaylistsItems(c *gin.Context) {\r\n+    playlistID := c.Query(\"playlistID\")\r\n+    data, err := ys.drivenAdapter.GetSearchPlaylistsItems(context.Background(), playlistID)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"data\": data})\r\n+}\r\n+\r\n+func (ys *YouTubeService) HandleGetCheckLive(c *gin.Context) {\r\n+    data, err := ys.drivenAdapter.GetCheckLive(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"data\": data})\r\n+}\r\n"
                }
            ],
            "date": 1719218283451,
            "name": "Commit-0",
            "content": "package \r\n\r\nimport (\r\n    \"context\"\r\n    \"github.com/gin-gonic/gin\"\r\n    \"youtube-api/models\"\r\n    \"youtube-api/ports/drivens\"\r\n)\r\n\r\ntype YouTubeService struct {\r\n    drivenAdapter drivens.YouTubeDrivenPort\r\n}\r\n\r\nfunc NewYouTubeService(drivenAdapter drivens.YouTubeDrivenPort) *YouTubeService {\r\n    return &YouTubeService{\r\n        drivenAdapter: drivenAdapter,\r\n    }\r\n}\r\n\r\nfunc (ys *YouTubeService) HandleGetSearching(c *gin.Context) {\r\n    query := c.Query(\"search\")\r\n    data, err := ys.drivenAdapter.GetSearching(context.Background(), query)\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"data\": data})\r\n}\r\n\r\nfunc (ys *YouTubeService) HandleGetRandomVideo(c *gin.Context) {\r\n    data, err := ys.drivenAdapter.GetRandomVideo(context.Background())\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"data\": data})\r\n}\r\n\r\nfunc (ys *YouTubeService) HandleGetSearchPlaylists(c *gin.Context) {\r\n    data, err := ys.drivenAdapter.GetSearchPlaylists(context.Background())\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"data\": data})\r\n}\r\n\r\nfunc (ys *YouTubeService) HandleGetSearchPlaylistsItems(c *gin.Context) {\r\n    playlistID := c.Query(\"playlistID\")\r\n    data, err := ys.drivenAdapter.GetSearchPlaylistsItems(context.Background(), playlistID)\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"data\": data})\r\n}\r\n\r\nfunc (ys *YouTubeService) HandleGetCheckLive(c *gin.Context) {\r\n    data, err := ys.drivenAdapter.GetCheckLive(context.Background())\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"data\": data})\r\n}\r\n"
        }
    ]
}