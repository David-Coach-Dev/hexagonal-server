{
    "sourceFile": "monitor-api/monitor.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1719218047147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719218572849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+package main\r\n+\r\n+import (\r\n+    \"context\"\r\n+    \"monitor-api/models\"\r\n+    \"github.com/gin-gonic/gin\"\r\n+    \"monitor-api/ports/drivens\"\r\n+)\r\n+\r\n+type MonitorService struct {\r\n+    drivenAdapter drivens.MonitorDrivenPort\r\n+}\r\n+\r\n+func NewMonitorService(drivenAdapter drivens.MonitorDrivenPort) *MonitorService {\r\n+    return &MonitorService{\r\n+        drivenAdapter: drivenAdapter,\r\n+    }\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleSaveLog(c *gin.Context) {\r\n+    var log models.MonitorLog\r\n+    if err := c.BindJSON(&log); err != nil {\r\n+        c.JSON(400, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    err := ms.drivenAdapter.SaveLog(context.Background(), log)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"Log saved successfully\"})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleListLogs(c *gin.Context) {\r\n+    logs, err := ms.drivenAdapter.ListLogs(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"logs\": logs})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleReadLog(c *gin.Context) {\r\n+    filename := c.Param(\"filename\")\r\n+    log, err := ms.drivenAdapter.ReadLog(context.Background(), filename)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"log\": log})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleDeleteLog(c *gin.Context) {\r\n+    filename := c.Param(\"filename\")\r\n+    err := ms.drivenAdapter.DeleteLog(context.Background(), filename)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"Log deleted successfully\"})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleDeleteAllLogs(c *gin.Context) {\r\n+    err := ms.drivenAdapter.DeleteAllLogs(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"All logs deleted successfully\"})\r\n+}\r\n"
                }
            ],
            "date": 1719218047147,
            "name": "Commit-0",
            "content": "package monitor_\r\n\r\nimport (\r\n    \"context\"\r\n    \"monitor-api/models\"\r\n    \"github.com/gin-gonic/gin\"\r\n    \"monitor-api/ports/drivens\"\r\n)\r\n\r\ntype MonitorService struct {\r\n    drivenAdapter drivens.MonitorDrivenPort\r\n}\r\n\r\nfunc NewMonitorService(drivenAdapter drivens.MonitorDrivenPort) *MonitorService {\r\n    return &MonitorService{\r\n        drivenAdapter: drivenAdapter,\r\n    }\r\n}\r\n\r\nfunc (ms *MonitorService) HandleSaveLog(c *gin.Context) {\r\n    var log models.MonitorLog\r\n    if err := c.BindJSON(&log); err != nil {\r\n        c.JSON(400, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    err := ms.drivenAdapter.SaveLog(context.Background(), log)\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"message\": \"Log saved successfully\"})\r\n}\r\n\r\nfunc (ms *MonitorService) HandleListLogs(c *gin.Context) {\r\n    logs, err := ms.drivenAdapter.ListLogs(context.Background())\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"logs\": logs})\r\n}\r\n\r\nfunc (ms *MonitorService) HandleReadLog(c *gin.Context) {\r\n    filename := c.Param(\"filename\")\r\n    log, err := ms.drivenAdapter.ReadLog(context.Background(), filename)\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"log\": log})\r\n}\r\n\r\nfunc (ms *MonitorService) HandleDeleteLog(c *gin.Context) {\r\n    filename := c.Param(\"filename\")\r\n    err := ms.drivenAdapter.DeleteLog(context.Background(), filename)\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"message\": \"Log deleted successfully\"})\r\n}\r\n\r\nfunc (ms *MonitorService) HandleDeleteAllLogs(c *gin.Context) {\r\n    err := ms.drivenAdapter.DeleteAllLogs(context.Background())\r\n    if err != nil {\r\n        c.JSON(500, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"message\": \"All logs deleted successfully\"})\r\n}\r\n"
        }
    ]
}