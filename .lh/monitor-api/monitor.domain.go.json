{
    "sourceFile": "monitor-api/monitor.domain.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1719196586027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719208436287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +0,0 @@\n-package main\r\n-\r\n-import (\r\n-    \"context\"\r\n-    \"github.com/gin-gonic/gin\"\r\n-    \"monitor-api/adapters/drivers\"\r\n-    \"monitor-api/adapters/drivens\"\r\n-    \"monitor-api/ports/drivers\"\r\n-    \"monitor-api/ports/drivens\"\r\n-    \"monitor-api/models\"\r\n-    \"monitor-api/handler\"\r\n-)\r\n-\r\n-var drivenAdapter drivens.MonitorDrivenPort = drivens.NewMonitorAdapter()\r\n-var monitorAdapter drivers.MonitorPort = drivers.NewMonitorProxyAdapter(drivenAdapter)\r\n-\r\n-func SaveLogEndpoint(c *gin.Context) {\r\n-    var input models.MonitorLog\r\n-    if err := c.BindJSON(&input); err != nil {\r\n-        handler.HandleError(c, err)\r\n-        return\r\n-    }\r\n-\r\n-    err := monitorAdapter.SaveLog(context.Background(), input)\r\n-    if err != nil {\r\n-        handler.HandleError(c, err)\r\n-        return\r\n-    }\r\n-\r\n-    c.JSON(http.StatusOK, gin.H{\"status\": \"log saved\"})\r\n-}\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719214818966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,70 @@\n package main\r\n \r\n import (\r\n     \"context\"\r\n-    \"log\"\r\n-    \"monitor-api/adapters/drivens\"\r\n+    \"monitor-api/models\"\r\n+    \"github.com/gin-gonic/gin\"\r\n     \"monitor-api/ports/drivens\"\r\n-    \"github.com/joho/godotenv\"\r\n )\r\n \r\n-func NewMonitorService() (drivens.MonitorDrivenPort, error) {\r\n-    // Cargar variables de entorno\r\n-    if err := godotenv.Load(); err != nil {\r\n-        log.Fatalf(\"Error loading .env file\")\r\n+type MonitorService struct {\r\n+    drivenAdapter drivens.MonitorDrivenPort\r\n+}\r\n+\r\n+func NewMonitorService(drivenAdapter drivens.MonitorDrivenPort) *MonitorService {\r\n+    return &MonitorService{\r\n+        drivenAdapter: drivenAdapter,\r\n     }\r\n+}\r\n \r\n-    return drivens.NewMonitorAdapter(), nil\r\n+func (ms *MonitorService) HandleSaveLog(c *gin.Context) {\r\n+    var log models.MonitorLog\r\n+    if err := c.BindJSON(&log); err != nil {\r\n+        c.JSON(400, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    err := ms.drivenAdapter.SaveLog(context.Background(), log)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"Log saved successfully\"})\r\n }\r\n+\r\n+func (ms *MonitorService) HandleListLogs(c *gin.Context) {\r\n+    logs, err := ms.drivenAdapter.ListLogs(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"logs\": logs})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleReadLog(c *gin.Context) {\r\n+    filename := c.Param(\"filename\")\r\n+    log, err := ms.drivenAdapter.ReadLog(context.Background(), filename)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"log\": log})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleDeleteLog(c *gin.Context) {\r\n+    filename := c.Param(\"filename\")\r\n+    err := ms.drivenAdapter.DeleteLog(context.Background(), filename)\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"Log deleted successfully\"})\r\n+}\r\n+\r\n+func (ms *MonitorService) HandleDeleteAllLogs(c *gin.Context) {\r\n+    err := ms.drivenAdapter.DeleteAllLogs(context.Background())\r\n+    if err != nil {\r\n+        c.JSON(500, gin.H{\"error\": err.Error()})\r\n+        return\r\n+    }\r\n+    c.JSON(200, gin.H{\"message\": \"All logs deleted successfully\"})\r\n+}\r\n"
                },
                {
                    "date": 1719217898773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package ma\r\n+package mo\r\n \r\n import (\r\n     \"context\"\r\n     \"monitor-api/models\"\r\n"
                }
            ],
            "date": 1719196586027,
            "name": "Commit-0",
            "content": "package main\r\n\r\nimport (\r\n    \"context\"\r\n    \"github.com/gin-gonic/gin\"\r\n    \"monitor-api/adapters/drivers\"\r\n    \"monitor-api/adapters/drivens\"\r\n    \"monitor-api/ports/drivers\"\r\n    \"monitor-api/ports/drivens\"\r\n    \"monitor-api/models\"\r\n    \"monitor-api/handler\"\r\n)\r\n\r\nvar drivenAdapter drivens.MonitorDrivenPort = drivens.NewMonitorAdapter()\r\nvar monitorAdapter drivers.MonitorPort = drivers.NewMonitorProxyAdapter(drivenAdapter)\r\n\r\nfunc SaveLogEndpoint(c *gin.Context) {\r\n    var input models.MonitorLog\r\n    if err := c.BindJSON(&input); err != nil {\r\n        handler.HandleError(c, err)\r\n        return\r\n    }\r\n\r\n    err := monitorAdapter.SaveLog(context.Background(), input)\r\n    if err != nil {\r\n        handler.HandleError(c, err)\r\n        return\r\n    }\r\n\r\n    c.JSON(http.StatusOK, gin.H{\"status\": \"log saved\"})\r\n}\r\n"
        }
    ]
}