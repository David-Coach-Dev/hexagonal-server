{
    "sourceFile": "authorization-api/authorization.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1719217862973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719217868004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package \r\n+package authorization\r\n \r\n import (\r\n     \"context\"\r\n     \"authorization-api/models\"\r\n"
                },
                {
                    "date": 1719218455366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package authorization_api\r\n+package authorization\r\n \r\n import (\r\n     \"context\"\r\n     \"authorization-api/models\"\r\n"
                },
                {
                    "date": 1719218608320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package authorization\r\n+package main\r\n \r\n import (\r\n     \"context\"\r\n     \"authorization-api/models\"\r\n"
                }
            ],
            "date": 1719217862973,
            "name": "Commit-0",
            "content": "package \r\n\r\nimport (\r\n    \"context\"\r\n    \"authorization-api/models\"\r\n    \"github.com/gin-gonic/gin\"\r\n    \"authorization-api/ports/drivens\"\r\n)\r\n\r\ntype AuthorizationService struct {\r\n    drivenAdapter drivens.AuthorizationDrivenPort\r\n}\r\n\r\nfunc NewAuthorizationService(drivenAdapter drivens.AuthorizationDrivenPort) *AuthorizationService {\r\n    return &AuthorizationService{\r\n        drivenAdapter: drivenAdapter,\r\n    }\r\n}\r\n\r\nfunc (as *AuthorizationService) HandleAuthorize(c *gin.Context) {\r\n    var req models.AuthorizationRequest\r\n    if err := c.BindJSON(&req); err != nil {\r\n        c.JSON(400, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    authorized, err := as.drivenAdapter.Authorize(context.Background(), req.Token, req.Resource, req.Action)\r\n    if err != nil {\r\n        c.JSON(401, gin.H{\"error\": err.Error()})\r\n        return\r\n    }\r\n    c.JSON(200, gin.H{\"authorized\": authorized})\r\n}\r\n"
        }
    ]
}