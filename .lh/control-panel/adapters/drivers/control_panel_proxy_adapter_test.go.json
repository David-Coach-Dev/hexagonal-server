{
    "sourceFile": "control-panel/adapters/drivers/control_panel_proxy_adapter_test.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1719199224674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1719199224674,
            "name": "Commit-0",
            "content": "package drivers\r\n\r\nimport (\r\n    \"context\"\r\n    \"testing\"\r\n    \"control-panel/ports/drivens\"\r\n    \"control-panel/models\"\r\n    \"github.com/stretchr/testify/assert\"\r\n)\r\n\r\ntype mockYouTubeAdapter struct{}\r\n\r\nfunc (m *mockYouTubeAdapter) GetSearching(ctx context.Context, query string) ([]models.DataYT, error) {\r\n    return []models.DataYT{\r\n        {\r\n            ID:          \"video1\",\r\n            Title:       \"Test Video 1\",\r\n            Description: \"Test Description 1\",\r\n            URL:         \"http://example.com/video1\",\r\n        },\r\n    }, nil\r\n}\r\n\r\ntype mockMonitorAdapter struct{}\r\n\r\nfunc (m *mockMonitorAdapter) SaveMonitorLog(ctx context.Context, log models.MonitorLog) error {\r\n    return nil\r\n}\r\n\r\ntype mockErrorAdapter struct{}\r\n\r\nfunc (m *mockErrorAdapter) SaveErrorLog(ctx context.Context, log models.ErrorLog) error {\r\n    return nil\r\n}\r\n\r\nfunc TestControlPanelAdapter_GetYouTubeData(t *testing.T) {\r\n    ctx := context.Background()\r\n    ytAdapter := &mockYouTubeAdapter{}\r\n    monitorAdapter := &mockMonitorAdapter{}\r\n    errorAdapter := &mockErrorAdapter{}\r\n    cpa := NewControlPanelAdapter(ctx, ytAdapter, monitorAdapter, errorAdapter)\r\n\r\n    data, err := cpa.GetYouTubeData(ctx, \"test\")\r\n    assert.NoError(t, err)\r\n    assert.NotNil(t, data)\r\n    assert.Equal(t, \"video1\", data[0].ID)\r\n}\r\n"
        }
    ]
}