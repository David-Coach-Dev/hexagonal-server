{
    "sourceFile": "control-panel/adapters/drivers/control_panel_driver_adapter.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1719216330959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719217199457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-package adapters\r\n+package drivers\r\n \r\n import (\r\n     \"context\"\r\n     \"control-panel/models\"\r\n"
                }
            ],
            "date": 1719216330959,
            "name": "Commit-0",
            "content": "package \r\n\r\nimport (\r\n    \"context\"\r\n    \"control-panel/models\"\r\n    \"control-panel/ports/drivens\"\r\n)\r\n\r\ntype ControlPanelDriverAdapter struct {\r\n    drivenAdapter drivens.ControlPanelDrivenPort\r\n}\r\n\r\nfunc NewControlPanelDriverAdapter(drivenAdapter drivens.ControlPanelDrivenPort) *ControlPanelDriverAdapter {\r\n    return &ControlPanelDriverAdapter{\r\n        drivenAdapter: drivenAdapter,\r\n    }\r\n}\r\n\r\n// Funciones de autenticación\r\nfunc (cpda *ControlPanelDriverAdapter) Authenticate(ctx context.Context, credentials models.Credentials) (string, error) {\r\n    return cpda.drivenAdapter.Authenticate(ctx, credentials)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) Authorize(ctx context.Context, token string, resource string, action string) (bool, error) {\r\n    return cpda.drivenAdapter.Authorize(ctx, token, resource, action)\r\n}\r\n\r\n// Funciones de YouTube\r\nfunc (cpda *ControlPanelDriverAdapter) GetYouTubeSearching(ctx context.Context, searching string) ([]models.DataYT, error) {\r\n    return cpda.drivenAdapter.GetYouTubeSearching(ctx, searching)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) GetYouTubeRandomVideo(ctx context.Context) (models.DataYT, error) {\r\n    return cpda.drivenAdapter.GetYouTubeRandomVideo(ctx)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) GetYouTubePlaylists(ctx context.Context) ([]models.DataYT, error) {\r\n    return cpda.drivenAdapter.GetYouTubePlaylists(ctx)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) GetYouTubePlaylistItems(ctx context.Context, playlistID string) ([]models.DataYT, error) {\r\n    return cpda.drivenAdapter.GetYouTubePlaylistItems(ctx, playlistID)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) GetYouTubeLive(ctx context.Context) (models.Live, error) {\r\n    return cpda.drivenAdapter.GetYouTubeLive(ctx)\r\n}\r\n\r\n// Funciones de monitorización\r\nfunc (cpda *ControlPanelDriverAdapter) SaveMonitorLog(ctx context.Context, log models.MonitorLog) error {\r\n    return cpda.drivenAdapter.SaveMonitorLog(ctx, log)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) ListMonitorLogs(ctx context.Context) ([]string, error) {\r\n    return cpda.drivenAdapter.ListMonitorLogs(ctx)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) ReadMonitorLog(ctx context.Context, filename string) (*models.MonitorLog, error) {\r\n    return cpda.drivenAdapter.ReadMonitorLog(ctx, filename)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) DeleteMonitorLog(ctx context.Context, filename string) error {\r\n    return cpda.drivenAdapter.DeleteMonitorLog(ctx, filename)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) DeleteAllMonitorLogs(ctx context.Context) error {\r\n    return cpda.drivenAdapter.DeleteAllMonitorLogs(ctx)\r\n}\r\n\r\n// Funciones de logs\r\nfunc (cpda *ControlPanelDriverAdapter) SaveErrorLog(ctx context.Context, log models.ErrorLog) error {\r\n    return cpda.drivenAdapter.SaveErrorLog(ctx, log)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) ListLogs(ctx context.Context) ([]string, error) {\r\n    return cpda.drivenAdapter.ListLogs(ctx)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) ReadLog(ctx context.Context, filename string) (*models.ErrorLog, error) {\r\n    return cpda.drivenAdapter.ReadLog(ctx, filename)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) DeleteLog(ctx context.Context, filename string) error {\r\n    return cpda.drivenAdapter.DeleteLog(ctx, filename)\r\n}\r\n\r\nfunc (cpda *ControlPanelDriverAdapter) DeleteAllLogs(ctx context.Context) error {\r\n    return cpda.drivenAdapter.DeleteAllLogs(ctx)\r\n}\r\n"
        }
    ]
}