{
    "sourceFile": "control-panel/adapters/drivers/control_panel_proxy_adapter.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1719193866604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719198866649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +0,0 @@\n-package drivers\r\n-\r\n-import (\r\n-    \"context\"\r\n-    \"control-panel/ports/drivens\"\r\n-)\r\n-\r\n-type ControlPanelAdapter struct {\r\n-    drivenAdapter drivens.DrivenAdapterPort\r\n-}\r\n-\r\n-func NewControlPanelAdapter(drivenAdapter drivens.DrivenAdapterPort) *ControlPanelAdapter {\r\n-    return &ControlPanelAdapter{\r\n-        drivenAdapter: drivenAdapter,\r\n-    }\r\n-}\r\n-\r\n-func (cpa *ControlPanelAdapter) ExampleFunction(ctx context.Context, data string) (string, error) {\r\n-    result, err := cpa.drivenAdapter.ExampleDrivenFunction(ctx, data)\r\n-    if err != nil {\r\n-        return \"\", err\r\n-    }\r\n-    return result, nil\r\n-}\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719198872459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+package drivers\r\n+\r\n+import (\r\n+    \"context\"\r\n+    \"control-panel/ports/drivens\"\r\n+    \"control-panel/ports/drivers\"\r\n+)\r\n+\r\n+type ControlPanelAdapter struct {\r\n+    ytAdapter      drivers.YouTubePort\r\n+    monitorAdapter drivens.MonitorPort\r\n+    errorAdapter   drivens.LogsPort\r\n+}\r\n+\r\n+func NewControlPanelAdapter(ctx context.Context, ytAdapter drivers.YouTubePort, monitorAdapter drivens.MonitorPort, errorAdapter drivens.LogsPort) *ControlPanelAdapter {\r\n+    return &ControlPanelAdapter{\r\n+        ytAdapter:      ytAdapter,\r\n+        monitorAdapter: monitorAdapter,\r\n+        errorAdapter:   errorAdapter,\r\n+    }\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) GetYouTubeData(ctx context.Context, query string) (interface{}, error) {\r\n+    data, err := cpa.ytAdapter.GetSearching(ctx, query)\r\n+    if err != nil {\r\n+        cpa.errorAdapter.SaveErrorLog(ctx, models.ErrorLog{\r\n+            ID:       \"1\",\r\n+            Endpoint: \"/youtube/search\",\r\n+            Usuario:  \"unknown\",\r\n+            Error:    err.Error(),\r\n+        })\r\n+        return nil, err\r\n+    }\r\n+\r\n+    cpa.monitorAdapter.SaveMonitorLog(ctx, models.MonitorLog{\r\n+        ID:        \"1\",\r\n+        Endpoint:  \"/youtube/search\",\r\n+        Usuario:   \"unknown\",\r\n+        Respuesta: \"success\",\r\n+    })\r\n+\r\n+    return data, nil\r\n+}\r\n"
                },
                {
                    "date": 1719202618753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,42 +2,23 @@\n \r\n import (\r\n     \"context\"\r\n     \"control-panel/ports/drivens\"\r\n-    \"control-panel/ports/drivers\"\r\n )\r\n \r\n type ControlPanelAdapter struct {\r\n-    ytAdapter      drivers.YouTubePort\r\n-    monitorAdapter drivens.MonitorPort\r\n-    errorAdapter   drivens.LogsPort\r\n+    drivenAdapter drivens.DrivenAdapterPort\r\n }\r\n \r\n-func NewControlPanelAdapter(ctx context.Context, ytAdapter drivers.YouTubePort, monitorAdapter drivens.MonitorPort, errorAdapter drivens.LogsPort) *ControlPanelAdapter {\r\n+func NewControlPanelAdapter(drivenAdapter drivens.DrivenAdapterPort) *ControlPanelAdapter {\r\n     return &ControlPanelAdapter{\r\n-        ytAdapter:      ytAdapter,\r\n-        monitorAdapter: monitorAdapter,\r\n-        errorAdapter:   errorAdapter,\r\n+        drivenAdapter: drivenAdapter,\r\n     }\r\n }\r\n \r\n-func (cpa *ControlPanelAdapter) GetYouTubeData(ctx context.Context, query string) (interface{}, error) {\r\n-    data, err := cpa.ytAdapter.GetSearching(ctx, query)\r\n+func (cpa *ControlPanelAdapter) ExampleFunction(ctx context.Context, data string) (string, error) {\r\n+    result, err := cpa.drivenAdapter.ExampleDrivenFunction(ctx, data)\r\n     if err != nil {\r\n-        cpa.errorAdapter.SaveErrorLog(ctx, models.ErrorLog{\r\n-            ID:       \"1\",\r\n-            Endpoint: \"/youtube/search\",\r\n-            Usuario:  \"unknown\",\r\n-            Error:    err.Error(),\r\n-        })\r\n-        return nil, err\r\n+        return \"\", err\r\n     }\r\n-\r\n-    cpa.monitorAdapter.SaveMonitorLog(ctx, models.MonitorLog{\r\n-        ID:        \"1\",\r\n-        Endpoint:  \"/youtube/search\",\r\n-        Usuario:   \"unknown\",\r\n-        Respuesta: \"success\",\r\n-    })\r\n-\r\n-    return data, nil\r\n+    return result, nil\r\n }\r\n"
                },
                {
                    "date": 1719209691652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,43 +1,107 @@\n-package drivers\r\n+package drivens\r\n \r\n import (\r\n     \"context\"\r\n-    \"control-panel/ports/drivens\"\r\n-    \"control-panel/ports/drivers\"\r\n+    \"control-panel/models\"\r\n+    \"youtube-api/ports/drivers\"\r\n+    \"monitor-api/ports/drivers\"\r\n+    \"logs-api/ports/drivers\"\r\n+    \"authentication-api/ports/drivens\"\r\n+    \"authorization-api/ports/drivens\"\r\n )\r\n \r\n type ControlPanelAdapter struct {\r\n-    ytAdapter      drivers.YouTubePort\r\n-    monitorAdapter drivens.MonitorPort\r\n-    errorAdapter   drivens.LogsPort\r\n+    authAdapter      drivens.AuthenticationDrivenPort\r\n+    authzAdapter     drivens.AuthorizationDrivenPort\r\n+    youtubeAdapter   drivers.YouTubePort\r\n+    monitorAdapter   drivers.MonitorPort\r\n+    logsAdapter      drivers.LogsPort\r\n }\r\n \r\n-func NewControlPanelAdapter(ctx context.Context, ytAdapter drivers.YouTubePort, monitorAdapter drivens.MonitorPort, errorAdapter drivens.LogsPort) *ControlPanelAdapter {\r\n+func NewControlPanelAdapter(\r\n+    authAdapter drivens.AuthenticationDrivenPort,\r\n+    authzAdapter drivens.AuthorizationDrivenPort,\r\n+    youtubeAdapter drivers.YouTubePort,\r\n+    monitorAdapter drivers.MonitorPort,\r\n+    logsAdapter drivers.LogsPort,\r\n+) *ControlPanelAdapter {\r\n     return &ControlPanelAdapter{\r\n-        ytAdapter:      ytAdapter,\r\n+        authAdapter:    authAdapter,\r\n+        authzAdapter:   authzAdapter,\r\n+        youtubeAdapter: youtubeAdapter,\r\n         monitorAdapter: monitorAdapter,\r\n-        errorAdapter:   errorAdapter,\r\n+        logsAdapter:    logsAdapter,\r\n     }\r\n }\r\n \r\n-func (cpa *ControlPanelAdapter) GetYouTubeData(ctx context.Context, query string) (interface{}, error) {\r\n-    data, err := cpa.ytAdapter.GetSearching(ctx, query)\r\n-    if err != nil {\r\n-        cpa.errorAdapter.SaveErrorLog(ctx, models.ErrorLog{\r\n-            ID:       \"1\",\r\n-            Endpoint: \"/youtube/search\",\r\n-            Usuario:  \"unknown\",\r\n-            Error:    err.Error(),\r\n-        })\r\n-        return nil, err\r\n-    }\r\n+// Funciones de autenticación\r\n+func (cpa *ControlPanelAdapter) Authenticate(ctx context.Context, credentials models.Credentials) (string, error) {\r\n+    return cpa.authAdapter.Authenticate(ctx, credentials)\r\n+}\r\n \r\n-    cpa.monitorAdapter.SaveMonitorLog(ctx, models.MonitorLog{\r\n-        ID:        \"1\",\r\n-        Endpoint:  \"/youtube/search\",\r\n-        Usuario:   \"unknown\",\r\n-        Respuesta: \"success\",\r\n-    })\r\n+func (cpa *ControlPanelAdapter) Authorize(ctx context.Context, token string, resource string, action string) (bool, error) {\r\n+    return cpa.authzAdapter.Authorize(ctx, token, resource, action)\r\n+}\r\n \r\n-    return data, nil\r\n+// Funciones de YouTube\r\n+func (cpa *ControlPanelAdapter) GetYouTubeSearching(ctx context.Context, searching string) ([]models.DataYT, error) {\r\n+    return cpa.youtubeAdapter.GetSearching(ctx, searching)\r\n }\r\n+\r\n+func (cpa *ControlPanelAdapter) GetYouTubeRandomVideo(ctx context.Context) (models.DataYT, error) {\r\n+    return cpa.youtubeAdapter.GetRandomVideo(ctx)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) GetYouTubePlaylists(ctx context.Context) ([]models.DataYT, error) {\r\n+    return cpa.youtubeAdapter.GetSearchPlaylists(ctx)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) GetYouTubePlaylistItems(ctx context.Context, playlistID string) ([]models.DataYT, error) {\r\n+    return cpa.youtubeAdapter.GetSearchPlaylistsItems(ctx, playlistID)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) GetYouTubeLive(ctx context.Context) (models.Live, error) {\r\n+    return cpa.youtubeAdapter.GetCheckLive(ctx)\r\n+}\r\n+\r\n+// Funciones de monitorización\r\n+func (cpa *ControlPanelAdapter) SaveMonitorLog(ctx context.Context, log models.MonitorLog) error {\r\n+    return cpa.monitorAdapter.SaveLog(ctx, log)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) ListMonitorLogs(ctx context.Context) ([]string, error) {\r\n+    return cpa.monitorAdapter.ListLogs(ctx)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) ReadMonitorLog(ctx context.Context, filename string) (*models.MonitorLog, error) {\r\n+    return cpa.monitorAdapter.ReadLog(ctx, filename)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) DeleteMonitorLog(ctx context.Context, filename string) error {\r\n+    return cpa.monitorAdapter.DeleteLog(ctx, filename)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) DeleteAllMonitorLogs(ctx context.Context) error {\r\n+    return cpa.monitorAdapter.DeleteAllLogs(ctx)\r\n+}\r\n+\r\n+// Funciones de logs\r\n+func (cpa *ControlPanelAdapter) SaveErrorLog(ctx context.Context, log models.ErrorLog) error {\r\n+    return cpa.logsAdapter.SaveLog(ctx, log)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) ListLogs(ctx context.Context) ([]string, error) {\r\n+    return cpa.logsAdapter.ListLogs(ctx)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) ReadLog(ctx context.Context, filename string) (*models.ErrorLog, error) {\r\n+    return cpa.logsAdapter.ReadLog(ctx, filename)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) DeleteLog(ctx context.Context, filename string) error {\r\n+    return cpa.logsAdapter.DeleteLog(ctx, filename)\r\n+}\r\n+\r\n+func (cpa *ControlPanelAdapter) DeleteAllLogs(ctx context.Context) error {\r\n+    return cpa.logsAdapter.DeleteAllLogs(ctx)\r\n+}\r\n"
                },
                {
                    "date": 1719209828312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+package drivers\r\n+\r\n+import (\r\n+    \"context\"\r\n+    \"control-panel/models\"\r\n+    \"control-panel/ports/drivens\"\r\n+    \"control-panel/ports/drivers\"\r\n+)\r\n+\r\n+type ControlPanelProxyAdapter struct {\r\n+    drivenAdapter drivens.ControlPanelDrivenPort\r\n+}\r\n+\r\n+func NewControlPanelProxyAdapter(drivenAdapter drivens.ControlPanelDrivenPort) *ControlPanelProxyAdapter {\r\n+    return &ControlPanelProxyAdapter{\r\n+        drivenAdapter: drivenAdapter,\r\n+    }\r\n+}\r\n+\r\n+// Funciones de autenticación\r\n+func (cppa *ControlPanelProxyAdapter) Authenticate(ctx context.Context, credentials models.Credentials) (string, error) {\r\n+    return cppa.drivenAdapter.Authenticate(ctx, credentials)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) Authorize(ctx context.Context, token string, resource string, action string) (bool, error) {\r\n+    return cppa.drivenAdapter.Authorize(ctx, token, resource, action)\r\n+}\r\n+\r\n+// Funciones de YouTube\r\n+func (cppa *ControlPanelProxyAdapter) GetYouTubeSearching(ctx context.Context, searching string) ([]models.DataYT, error) {\r\n+    return cppa.drivenAdapter.GetYouTubeSearching(ctx, searching)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) GetYouTubeRandomVideo(ctx context.Context) (models.DataYT, error) {\r\n+    return cppa.drivenAdapter.GetYouTubeRandomVideo(ctx)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) GetYouTubePlaylists(ctx context.Context) ([]models.DataYT, error) {\r\n+    return cppa.drivenAdapter.GetYouTubePlaylists(ctx)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) GetYouTubePlaylistItems(ctx context.Context, playlistID string) ([]models.DataYT, error) {\r\n+    return cppa.drivenAdapter.GetYouTubePlaylistItems(ctx, playlistID)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) GetYouTubeLive(ctx context.Context) (models.Live, error) {\r\n+    return cppa.drivenAdapter.GetYouTubeLive(ctx)\r\n+}\r\n+\r\n+// Funciones de monitorización\r\n+func (cppa *ControlPanelProxyAdapter) SaveMonitorLog(ctx context.Context, log models.MonitorLog) error {\r\n+    return cppa.drivenAdapter.SaveMonitorLog(ctx, log)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) ListMonitorLogs(ctx context.Context) ([]string, error) {\r\n+    return cppa.drivenAdapter.ListMonitorLogs(ctx)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) ReadMonitorLog(ctx context.Context, filename string) (*models.MonitorLog, error) {\r\n+    return cppa.drivenAdapter.ReadMonitorLog(ctx, filename)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) DeleteMonitorLog(ctx context.Context, filename string) error {\r\n+    return cppa.drivenAdapter.DeleteMonitorLog(ctx, filename)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) DeleteAllMonitorLogs(ctx context.Context) error {\r\n+    return cppa.drivenAdapter.DeleteAllMonitorLogs(ctx)\r\n+}\r\n+\r\n+// Funciones de logs\r\n+func (cppa *ControlPanelProxyAdapter) SaveErrorLog(ctx context.Context, log models.ErrorLog) error {\r\n+    return cppa.drivenAdapter.SaveErrorLog(ctx, log)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) ListLogs(ctx context.Context) ([]string, error) {\r\n+    return cppa.drivenAdapter.ListLogs(ctx)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) ReadLog(ctx context.Context, filename string) (*models.ErrorLog, error) {\r\n+    return cppa.drivenAdapter.ReadLog(ctx, filename)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) DeleteLog(ctx context.Context, filename string) error {\r\n+    return cppa.drivenAdapter.DeleteLog(ctx, filename)\r\n+}\r\n+\r\n+func (cppa *ControlPanelProxyAdapter) DeleteAllLogs(ctx context.Context) error {\r\n+    return cppa.drivenAdapter.DeleteAllLogs(ctx)\r\n+}\r\n"
                }
            ],
            "date": 1719193866604,
            "name": "Commit-0",
            "content": "package drivers\r\n\r\nimport (\r\n    \"context\"\r\n    \"control-panel/ports/drivens\"\r\n)\r\n\r\ntype ControlPanelAdapter struct {\r\n    drivenAdapter drivens.DrivenAdapterPort\r\n}\r\n\r\nfunc NewControlPanelAdapter(drivenAdapter drivens.DrivenAdapterPort) *ControlPanelAdapter {\r\n    return &ControlPanelAdapter{\r\n        drivenAdapter: drivenAdapter,\r\n    }\r\n}\r\n\r\nfunc (cpa *ControlPanelAdapter) ExampleFunction(ctx context.Context, data string) (string, error) {\r\n    result, err := cpa.drivenAdapter.ExampleDrivenFunction(ctx, data)\r\n    if err != nil {\r\n        return \"\", err\r\n    }\r\n    return result, nil\r\n}\r\n"
        }
    ]
}